{"version":3,"sources":["routes/styles/wood-pattern.jpg","views/todos/epics.ts","store/utils.ts","views/todos/actions.ts","views/todos/reducer.ts","store/root-reducer.ts","store/root-epic.ts","services/logger.ts","services/local-storage.ts","services/i18n.ts","services/todoApi/TodoLocalService.ts","services/todoApi/TodoFirebaseService.ts","services/index.ts","services/todoApi/factory.ts","store/index.ts","views/todos/components/TodoItem/TodoItem.tsx","views/todos/components/TodoItem/TodoItem.style.ts","views/todos/components/TodoItem/index.tsx","views/todos/components/TodoForm/TodoForm.style.ts","views/todos/components/TodoForm/TodoForm.tsx","views/todos/components/TodoForm/index.ts","views/todos/components/TodoPagination/TodoPagination.style.ts","views/todos/components/TodoPagination/index.ts","views/todos/components/TodoPagination/TodoPagination.tsx","views/todos/components/TodoList.style.ts","views/todos/components/TodoList.tsx","views/todos/index.ts","routes/home.tsx","index.tsx"],"names":["module","exports","action","method","composeEnhancers","compose","setFocus","createAction","addTodoAsync","createAsyncAction","removeTodoAsync","getTodosAsync","saveTodoAcync","isLoading","createReducer","handleAction","request","state","success","failure","todos","total","data","payload","removingId","focusedId","todosReducer","combineReducers","rootReducer","history","router","connectRouter","epicForCRUD","action$","state$","todoApi","pipe","filter","isActionOf","switchMap","from","map","catchError","iif","find","value","location","fetchTodosEpic","createTodoEpic","updateTodoEpic","removeTodosEpic","combineEpics","Object","values","todosEpics","log","console","version","process","APP_VERSION","STORAGE_KEY","saveState","storeState","localStorage","serializedState","JSON","stringify","setItem","error","Error","loadState","getItem","parse","i18n","use","initReactI18next","init","fallbackLng","debug","emulateDelay","Promise","resolve","setTimeout","Math","round","random","type","db","this","serialize","a","search","qs","replace","sort","limit","offset","result","paginate","length","slice","parseInt","b","id","l","s","toLowerCase","title","includes","indexOf","create","push","Date","getTime","commit","update","e","delete","text","logger","TodoLocalService","TodoFirebaseService","impl","createBrowserHistory","epicMiddleware","createEpicMiddleware","dependencies","services","middlewares","createRouterMiddleware","enhancer","applyMiddleware","store","createStore","run","rootEpic","Keys","createUseStyles","theme","width","fontSize","padding","margin","font","input","maxWidth","minWidth","background","border","paddingLeft","paddingTop","paddingBottom","borderTopLeftRadius","borderBottomLeftRadius","display","height","outline","position","marginTop","transition","opacity","todoItem","boxShadow","borderRadius","borderWidth","borderStyle","borderColor","marginBottom","minHeight","borderBottomWidth","todoAction","marginLeft","mapDispatch","save","remove","focus","TodoItem","connect","focused","removing","isRemoving","isSaving","isEditing","inputRef","useEffect","style","scrollHeight","useState","inputValue","setInput","saveTodo","classes","useStyles","startEdit","ev","target","tagName","stopPropagation","Input","ref","onKeyUp","key","Enter","ctrlKey","preventDefault","defaultValue","className","Title","onMouseDown","Delete","onClick","SaveDelete","onFocus","tabIndex","activeActions","formContainer","textArea","resize","overflow","boxSizing","actions","onCreate","TodoForm","placeholder","setValue","reset","innerText","r","paginationContainer","marginRight","paginationButtons","TodoPagination","spread","onChange","Function","size","floor","current","max","min","todoListContainer","animation","undefined","todoListItems","todoListItemWrapper","listStyle","fetch","TodoList","pushState","queryObject","query","pathname","cache","setCache","useStyle","Empty","todo","exact","path","justifyContent","backgroundImage","woodPattern","render","document","getElementById"],"mappings":"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","file":"static/js/main.8921097b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wood-pattern.6d5e7efa.jpg\";","import { Epic } from 'redux-observable'\nimport { from, of } from 'rxjs'\nimport { filter, switchMap, map, catchError, } from 'rxjs/operators'\nimport {iif} from 'rxjs/index'\nimport { isActionOf } from 'typesafe-actions'\n\nimport {Services, RootAction, RootState} from 'AppTypes'\nimport { getTodosAsync, addTodoAsync, removeTodoAsync, saveTodoAcync } from './actions';\n\n\nconst epicForCRUD = (action: any, method: string ): Epic<RootAction, RootAction, RootState, Services> =>\n    (action$: any, state$: any, { todoApi }) => \n        action$.pipe(\n            filter(isActionOf(action.request)),\n            switchMap(({payload}) => \n                from((todoApi('local') as any)[method](payload)).pipe(\n                    map(action.success as any),\n                    catchError(action.failure as any)\n                )\n            ),\n            switchMap(() =>  iif(() => method !== 'find',\n                from(todoApi('local').find(state$.value.router.location)).pipe(\n                    map(getTodosAsync.success as any),\n                    catchError(getTodosAsync.failure as any)\n                )\n            ))\n        )\n\nconst epicForFetch = (action: any, method: string ): Epic<RootAction, RootAction, RootState, Services> =>\n        (action$: any, state$: any, { todoApi }) => \n            action$.pipe(\n                filter(isActionOf(action.request)),\n                switchMap(({payload}) => \n                    from((todoApi('local') as any)[method](state$.value.router.location)).pipe(\n                        map(action.success as any),\n                        catchError(action.failure as any)\n                    )\n                )\n            )\n\nexport const fetchTodosEpic = epicForFetch(getTodosAsync, 'find')\nexport const createTodoEpic = epicForCRUD(addTodoAsync, 'create')\nexport const updateTodoEpic = epicForCRUD(saveTodoAcync, 'update')\nexport const removeTodosEpic = epicForCRUD(removeTodoAsync, 'delete')","import { compose } from 'redux';\n\nexport const composeEnhancers =\n  (process.env.NODE_ENV === 'development' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;","import { Todo } from 'AppModels'\nimport { createAsyncAction, createAction } from 'typesafe-actions'\n\nexport const setFocus = createAction('SET_TODO_FOCUS')<number>()\n\nexport const addTodoAsync = createAsyncAction(\n    'ADD_TODOS_REQUEST',\n    'ADD_TODOS_SUCCESS',\n    'ADD_TODOS_FAILURE',\n)<undefined, Todo[], string>()\n\nexport const removeTodoAsync = createAsyncAction(\n    'REMOVE_TODOS_REQUEST',\n    'REMOVE_TODOS_SUCCESS',\n    'REMOVE_TODOS_FAILURE'\n)<any, boolean, string>()\n\nexport const getTodosAsync = createAsyncAction(\n    'LOAD_TODOS_REQUEST',\n    'LOAD_TODOS_SUCCESS',\n    'LOAD_TODOS_FAILURE'\n)<undefined, Todo[], string>()\n\nexport const saveTodoAcync = createAsyncAction(\n    'SAVE_TODO_REQUEST',\n    'SAVE_TODO_SUCCESS',\n    'SAVE_TODO_FAILURE'\n)<Todo, Todo, Error>()\n\nexport const saveTodosAcync = createAsyncAction(\n    'SAVE_TODOS_REQUEST',\n    'SAVE_TODOS_SUCCESS',\n    'SAVE_TODOS_FAILURE'\n)<undefined, undefined, string>()","import { Todo } from 'AppModels';\nimport {TodoResponse} from 'AppTypes'\nimport { combineReducers } from 'redux';\nimport { createReducer } from 'typesafe-actions';\nimport { getTodosAsync, addTodoAsync, removeTodoAsync, saveTodoAcync, setFocus } from './actions';\n\n\nexport const isLoading = createReducer(false as boolean)\n  .handleAction(\n    [\n      getTodosAsync.request, \n      addTodoAsync.request, \n      removeTodoAsync.request,\n      saveTodoAcync.request\n    ] as any, \n    (state, action) => true\n  )\n  .handleAction(\n    [\n      getTodosAsync.success, \n      getTodosAsync.failure,  \n      addTodoAsync.failure, \n      addTodoAsync.success, \n      removeTodoAsync.success, \n      removeTodoAsync.failure,\n      saveTodoAcync.failure,\n      saveTodoAcync.success\n    ] as any,\n    (state, action) => false\n  );\n\nexport const todos = createReducer({total: 0, data: []} as TodoResponse)\n  .handleAction(\n      getTodosAsync.success as any, \n      (state, action) => {\n        return action.payload\n      }\n  )\n\nexport const removingId = createReducer({} as any)\n  .handleAction(\n    [removeTodoAsync.request] as any, \n    (state, action) => action.payload\n  )\n  .handleAction(\n    [removeTodoAsync.success, removeTodoAsync.failure] as any,\n    (state, action) => null\n  );\n\nexport const focusedId = createReducer(-1 as number)\n    .handleAction(setFocus, (state, action) => action.payload)\n\nconst todosReducer = combineReducers({\n  isLoading,\n  removingId,\n  focusedId,\n  todos,\n});\n\nexport default todosReducer;\nexport type TodosState = ReturnType<typeof todosReducer>;\n","import { combineReducers } from 'redux'\nimport { History } from 'history'\nimport { connectRouter } from 'connected-react-router'\nimport todosReducer from '../views/todos/reducer'\n\nconst rootReducer = (history: History) => combineReducers({\n  router: connectRouter(history),\n  todos: todosReducer\n});\n\nexport default rootReducer;","import { combineEpics, Epic } from 'redux-observable';\nimport * as todosEpics from '../views/todos/epics'\n\nexport default combineEpics(...Object.values(todosEpics));","// tslint:disable-next-line:no-console\nexport const log = console.log;","const version = process.env.APP_VERSION;\nconst STORAGE_KEY = `__SERIALIZED_STATE_TREE_v${version}__`;\n\nexport function saveState<T = object>(storeState: T): boolean {\n  if (!localStorage) {\n    return false;\n  }\n\n  try {\n    const serializedState = JSON.stringify(storeState);\n    localStorage.setItem(STORAGE_KEY, serializedState);\n    return true;\n  } catch (error) {\n    throw new Error('store serialization failed');\n  }\n}\n\nexport function loadState<T = object>(): T | undefined {\n  if (!localStorage) {\n    return;\n  }\n\n  try {\n    const serializedState = localStorage.getItem(STORAGE_KEY);\n    if (serializedState == null) {\n      return;\n    }\n    return JSON.parse(serializedState);\n  } catch (error) {\n    throw new Error('store deserialization failed');\n  }\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\ni18n\n.use(initReactI18next)\n.init({\n    fallbackLng: 'en',\n    debug: true,\n})\n\nexport default i18n","import {Todo} from 'AppModels'\nimport ITodoService from './ITodoService'\nimport {TodoResponse} from 'AppTypes'\nimport qs from 'querystring'\n\nexport const KEY = '__TODOS__'\n\nconst emulateDelay = () => new Promise((resolve) => {\n    setTimeout(resolve, Math.round(Math.random() * 2000))\n})\n\nclass TodoLocalService implements ITodoService {\n\n    type: string = 'local'\n    db: any = this.serialize()\n\n    constructor() {\n        this.db = this.serialize()\n    }\n\n    serialize(){\n        return JSON.parse(localStorage.getItem(KEY) || '[]')\n    }\n\n    commit(){\n        localStorage.setItem(KEY, JSON.stringify(this.db))\n        this.db = this.serialize()\n    }\n\n    find = async ({search = '',}): Promise<TodoResponse> => {\n\n        const {\n            sort = 'desc',\n            filter, \n            limit, \n            offset, \n        } = qs.parse(search.replace('?', ''))\n\n        let result: Todo[] = this.db\n\n        const paginate = (): TodoResponse => ({\n            total: this.db.length,\n            data: result.slice(\n                parseInt(offset as any), \n                (parseInt(offset as any) + parseInt(limit as any)) || 10\n            )\n        })\n\n        if (sort === 'desc')\n            result = result.sort((a: Todo, b: Todo) => b.id - a.id)\n        \n        if (sort === 'asc')\n            result = result.sort((a: Todo, b: Todo) => a.id - b.id)\n\n        if (filter) {\n            const l = (s: any) => s.toLowerCase()\n            result = result\n                .filter((a: Todo) => l(a.title).includes(l(filter)))\n                .sort((a: Todo, b: Todo) => {\n                    return l(a.title).indexOf(filter) - l(b.title).indexOf(filter)\n                })\n            return paginate()\n        }\n        return paginate()\n    }\n\n    create = async (title: string) => {\n        this.db.push({\n            id: new Date().getTime(),\n            title,\n        })\n        this.commit()\n        await emulateDelay()\n    }\n\n    update = async ({id, title}: Todo) => {\n        const item: Todo = this.db.find((e: Todo) => e.id === id)\n        item.title = title\n        this.commit()\n        await emulateDelay()\n    }\n\n    delete = async (id: any) => {\n        this.db = this.db.filter((e: Todo) => e.id !== id)\n        this.commit()\n        await emulateDelay()\n    }\n    \n}\n\nexport default new TodoLocalService()\n\n","import ITodoService from './ITodoService'\n\n\nclass TodoFirebaseService implements ITodoService {\n\n    type: string = 'firebase'\n\n    constructor() {\n\n    }\n\n    find = async ({search = ''}): Promise<any> => {\n        \n    }\n\n    create = async (text: string) => {\n\n    }\n\n    update = async (id: any, text: string) => {\n\n    }\n\n    delete = async (id: any) => {\n\n    }\n    \n}\n\nexport default new TodoFirebaseService()\n\n","import * as logger from './logger'\nimport * as localStorage from './local-storage'\nimport * as i18n from './i18n'\nimport todoApi from './todoApi/factory'\n\nexport default {\n  logger,\n  localStorage,\n  i18n,\n  todoApi\n};\n","// Factory\nimport ITodoService from './ITodoService'\nimport TodoLocalService from './TodoLocalService'\nimport TodoFirebaseService from './TodoFirebaseService'\n\nexport default (type: string): ITodoService => [\n    TodoLocalService,\n    TodoFirebaseService\n]\n.find((impl: ITodoService) => impl.type === type) || TodoLocalService","import { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router';\n\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootEpic from './root-epic';\nimport services from '../services';\n\nimport AppTypes from 'AppTypes'\n\n// browser history\nexport const history = createBrowserHistory();\n\nexport const epicMiddleware = createEpicMiddleware<\n  AppTypes.RootAction,\n  AppTypes.RootAction,\n  AppTypes.RootState,\n  AppTypes.Services\n>({\n  dependencies: services,\n});\n\nconst routerMiddleware = createRouterMiddleware(history);\n\n// configure middlewares\nconst middlewares = [epicMiddleware, routerMiddleware];\n// compose enhancers\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// rehydrate state on app start\nconst initialState = {};\n\n// create store\nconst store = createStore(rootReducer(history), initialState, enhancer);\n\nepicMiddleware.run(rootEpic);\n\n// export store singleton instance\nexport default store;","\nimport React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport useStyles from './TodoItem.style'\nimport {removeTodoAsync, saveTodoAcync, setFocus} from '../../actions' \nimport { RootState } from 'AppTypes'\nimport {Todo} from 'AppModels'\n\nenum Keys {\n    Enter = 'Enter'\n}\n\ntype Props = {\n    id: any,\n    value: string,\n    save: Function,\n    remove: Function,\n    focus: Function\n} \n& ReturnType<typeof mapState>\n\nconst mapState = (state: RootState) => ({\n    focused: state.todos.focusedId,\n    removing: state.todos.removingId,\n    //saving: state.todos.savingId\n})\n\nconst mapDispatch = {\n    save: saveTodoAcync.request,\n    remove: removeTodoAsync.request,\n    focus: setFocus\n}\n\n\nconst TodoItem = ({ value, id, save, remove, focus, removing, focused }: Props) => {\n\n    const isRemoving = removing === id\n    const isSaving = focused === id\n    const isEditing = focused === id \n\n    let inputRef: HTMLTextAreaElement|null = null\n    useEffect(() => {\n        if (inputRef) {\n            if(!inputRef.style.height) {\n                inputRef.style.height = inputRef.scrollHeight + 'px'\n            }\n            inputRef.focus()\n        }\n    })\n\n    const [inputValue, setInput] = useState('')\n\n    const saveTodo = () => {\n        if (inputRef && inputRef.value) {\n            const updatedTodo: Todo = {\n                id, \n                title: inputValue || value\n            }\n            save(updatedTodo)\n            setInput('')\n        }\n    }\n\n    const deleteTodo = (ev: React.MouseEvent) => {\n        remove(id)\n        focus(-1)\n    }\n\n    const classes = useStyles()\n    const startEdit = (ev: any) => {\n        if (ev.target.tagName === 'BUTTON')\n            return\n        if(isRemoving || isSaving)\n            return\n        focus(id)\n    }\n\n    const handleKeyboard = (ev: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        switch(ev.key) {\n            case Keys.Enter:\n                if (ev.ctrlKey) {\n                    // need to handle mac's Cmd key as well\n                    ev.preventDefault()\n                    saveTodo()\n                }\n                break\n            default:\n                setInput((ev.target as any).value)\n        }\n    }\n\n    const stopPropagation = (e: any) => e.stopPropagation()\n\n\n    const Input = (\n        <textarea ref={(e) => {inputRef = e}} \n            onKeyUp={handleKeyboard}\n            defaultValue={value}\n            className={classes.input}\n        />\n    )\n    const Title = (\n        <pre className={classes.title} onMouseDown={stopPropagation}>{value}</pre>\n    )\n    const Delete = (\n        <button onClick={deleteTodo} onMouseDown={stopPropagation}>\n            Delete\n        </button>\n    )\n    const SaveDelete = (\n        <>\n        <button onClick={saveTodo}>Save</button>\n        {Delete}\n        </>\n    )\n    return (\n        <div className={classes.todoItem} onClick={startEdit} onFocus={startEdit} tabIndex={0}>\n            {isEditing ? Input : Title}\n            <div className={classes.todoAction}>\n                {isEditing ? SaveDelete : ''}\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapState, mapDispatch)(TodoItem)","import {createUseStyles} from 'react-jss'\n\ntype CSS = {\n    todoItem: any,\n    todoAction: any,\n    title: any,\n    input: any\n}\n\nconst styles = (theme: string): CSS => {\n    return {\n\n        title: {\n            width: '100%',\n            fontSize: 26,\n            padding: 16,\n            margin: 1,\n            font: '400 26px system-ui'\n        },\n\n        input: {\n            maxWidth: 'calc(100% - 18px)',\n            minWidth: 'calc(100% - 18px)',\n            width: 'calc(100% - 18px)',\n            background: 'transparent',\n            border: 'none',\n            fontSize: 26,\n            paddingLeft: 16,\n            paddingTop: 16,\n            paddingBottom: 16,\n            borderTopLeftRadius: 6,\n            borderBottomLeftRadius: 6,\n            display:'block',\n            height: 'auto',\n            '&:focus': {\n                outline: 'none'\n            },\n            '& + [class^=\"todoAction-\"]': {\n                display: 'block',\n                position: 'absolute',\n                marginTop: -26,\n                transition: 'opacity 1s ease-in-out',\n                opacity: 1\n            }\n        },\n\n        todoItem: {\n            background: 'white',\n            boxShadow: '0px 2px 1px #bbb',\n            display: 'block',\n            borderRadius: 6,\n            borderWidth: '1px 1px 0px 1px',\n            borderStyle: 'solid',\n            borderColor: '#eee',\n            marginBottom: 16,\n            minHeight: 42,\n            \"&:last-child\": {\n                borderBottomWidth: '1px'\n            },\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n\n        todoAction: {\n            opacity: 0,\n            transition: 'opacity 1s ease-in-out',\n            display: 'none',\n            width: '100px',\n            marginLeft: 6,\n            '& > button': {\n                width: '50%',\n                background: '#eee',\n                borderRadius: 6,\n                '&:focus':{\n                    outline: 'none'\n                }\n            }\n        }\n    }\n}\n\nexport default createUseStyles(styles) as () => CSS","import TodoItem from './TodoItem'\nexport default TodoItem","import {createUseStyles} from 'react-jss'\n\ntype CSS = {\n    formContainer: any,\n    textArea: any,\n    actions: any,\n}\n\nconst activeActions = {\n    display: 'block',\n    position: 'absolute',\n    marginTop: -26,\n    marginLeft: 4\n}\n\nconst styles = (): CSS  => ({\n    formContainer: {\n        width: '100%',\n        marginBottom: 24,\n    },\n    textArea: {\n        resize: 'none',\n        minWidth: \"100%\",\n        maxWidth: \"100%\",\n        width: '100%',\n        border: '0px dotted #ccc',\n        minHeight: 50,\n        height: 'auto',\n        overflow: 'auto',\n        borderRadius: 6,\n        padding: 16,\n        fontSize: 26,\n        paddingBottom: 26,\n        boxSizing: 'border-box',\n        boxShadow: '0px 2px 1px #bbb',\n        opacity: '.95',\n        '&:focus': {\n            outline: 'none'\n        },\n        '&:focus ~ [class^=\"actions-\"]': activeActions\n    },\n    actions: {\n        display: 'none',\n        '&:hover': activeActions,\n        '&:focus': {\n            outline: 'none'\n        }\n    }\n})\n\nexport default createUseStyles(styles) as () => CSS","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport { RootState } from 'AppTypes'\n\nimport {Todo} from 'AppModels'\nimport {addTodoAsync} from '../../actions' \nimport useStyles from './TodoForm.style'\n\ntype Props = {\n    placeholder?: string,\n    onCreate: Function\n} \n& ReturnType<typeof mapState>\n\nconst mapState = (state: RootState) => ({\n    isLoading: state.todos.isLoading,\n    todos: state.todos.todos\n})\n\nconst mapDispatch = {\n    onCreate: addTodoAsync.request\n}\n\n\nconst TodoForm = ({placeholder = 'Write whatever you want to do...', onCreate}: Props) => {\n    let inputRef: HTMLTextAreaElement \n    const [value, setValue] = useState('')\n\n    const addTodo = () => {\n        if (value) onCreate(value)\n        reset()\n    }\n\n    const reset = () => {\n        setValue('')\n        inputRef.innerText = ''\n        inputRef.value = ''\n    }\n\n    const classes = useStyles()\n\n\n    return (\n        <section className={classes.formContainer}>\n            <textarea \n                className={classes.textArea}\n                ref={(r: HTMLTextAreaElement) => inputRef = r}\n                onKeyUp={(e) => setValue((e.target as any).value)}\n                defaultValue={value}\n                placeholder={placeholder}>\n            </textarea>\n            <div className={classes.actions}>\n                <button onClick={addTodo}>Save</button>\n                <button onClick={reset}>Cancel</button>\n            </div>\n        </section>\n    )\n}\n\nexport default connect(mapState, mapDispatch)(TodoForm)","import TodoForm from './TodoForm'\n\nexport default TodoForm","import {createUseStyles} from 'react-jss'\n\ntype CSS = {\n    paginationContainer: any,\n    paginationButtons: any\n}\n\nconst styles = (): CSS  => ({\n    paginationContainer: {\n        marginTop: 24,\n        '& > *': {\n            marginRight: 12\n        }\n    },\n    paginationButtons: {\n\n        '& > button': {\n            background: '#eee',\n            borderRadius: 0,\n            '&:focus': {\n                outline: 'none'\n            }\n        },\n\n        '& > button:first-child': {\n\n        },\n\n        '& > button:last-child': {\n\n        },\n\n    }\n})\n\nexport default createUseStyles(styles) as () => CSS","import TodoPagination from './TodoPagination'\n\nexport default TodoPagination","import React, {useContext} from 'react'\nimport useStyles from './TodoPagination.style'\n\ntype Props = {\n    total: number,\n    limit: number,\n    offset: number,\n    spread?: number,\n    onChange?: Function\n}\n\nexport default ({total, limit, offset, spread = 5, onChange = new Function, }: Props) => {\n\n    const size = Math.floor(total / limit) + (total % limit && 1 || 0)\n    const current = Math.floor(offset / limit)\n\n    const goBack = () => {\n        onChange({\n            offset: Math.max(offset - limit, 0)\n        })\n    }\n\n    const goForward = () => {\n        onChange({\n            offset: Math.min(offset + limit, total - total % limit)\n        })\n    }\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.paginationContainer}>\n            <span>\n                Pages:\n            </span>\n            <span className={classes.paginationButtons}>\n                <button onClick={goBack}>Prev</button>\n                <button onClick={goForward}>Next</button>\n            </span>\n            <span>\n                {current + 1} / {size}\n            </span>\n        </div>\n    )\n}","import {createUseStyles} from 'react-jss'\n\ntype Props = {\n    isLoading: boolean\n}\n\ntype CSS = {\n    todoListContainer: any,\n    todoListItems: any,\n    todoListItemWrapper: any\n}\n\nconst styles = ({isLoading,}: Props): CSS  => ({\n    todoListContainer: {\n        width: '100%',\n        maxWidth: 600,\n        background: \"linear-gradient(159deg, #e1e4e7 0%, rgba(244,244,244,1) 50%, #e1e4e7 100%)\",\n        padding: 12,\n        borderRadius: 6,\n        boxShadow: '1px 1px 9px #eee',\n        animation: isLoading ? \"loadingBg 2s ease infinite\" : \"none\",\n        '& > *': {\n            opacity: isLoading ? .75 : undefined\n        }\n    },\n    todoListItems: {\n        padding: 0,\n        margin: 0,\n    },\n    todoListItemWrapper: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n    }\n})\n\nexport default createUseStyles(styles) as ({}: Props) => CSS","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport { RootState, TodoResponse } from 'AppTypes'\nimport qs from 'querystring'\n\nimport {push,} from 'connected-react-router'\nimport {Todo} from 'AppModels'\n\nimport TodoItem from './TodoItem'\nimport TodoForm from './TodoForm'\nimport TodoPagination from './TodoPagination'\nimport useStyle from './TodoList.style'\n\nimport {getTodosAsync, setFocus} from '../actions' \n\ntype Props = {\n    fetch: Function\n    push: Function,\n    focus: Function\n} \n& ReturnType<typeof mapState>\n\nconst mapState = (state: RootState) => ({\n    router: state.router,\n    isLoading: state.todos.isLoading,\n    todos: state.todos.todos,\n})\n\nconst mapDispatch = {\n    focus: setFocus,\n    fetch: getTodosAsync.request,\n    push\n}\n\nconst TodoList = function ({ isLoading, todos = {} as TodoResponse, fetch, router, push, focus}: Props) {\n\n    const search = qs.parse(router.location.search.replace('?', '')) // qs.parse() prefixes '?' to the first param\n\n    const pushState = (queryObject: any) => {\n        let query = qs.stringify({\n            ...search,\n            ...queryObject,\n        })\n        push(router.location.pathname + '?' + query)\n    }\n\n    if (\n        search.filter === undefined  || \n        search.limit  === undefined  ||\n        search.offset === undefined\n    ) pushState({\n        filter:'', \n        offset: 0, \n        limit:10, \n    })\n\n    const { limit, offset } = search\n    const [cache, setCache] = useState('')\n\n    if (cache !== router.location.search) {\n        setCache(router.location.search)\n        fetch(router.location)\n    }\n\n    const classes = useStyle({isLoading,})\n\n    const Empty = (\n        <small>\n            You have nothing to do 🙃\n        </small>\n    )\n\n    \n    return (\n        <section onClick={()=>{focus(-1)}} className={classes.todoListContainer + (isLoading ? \" loading\" : '')}>\n            <TodoForm />\n            \n            <ul className={classes.todoListItems} onClick={(e)=> e.stopPropagation()}>\n                {todos.data.map((todo: Todo) => (\n                    <li className={classes.todoListItemWrapper} key={todo.id}>\n                         <TodoItem value={todo.title} id={todo.id}/>\n                    </li>\n                ))}\n                { todos.total === 0 ? Empty : '' }\n            </ul>\n\n            <TodoPagination \n                limit={parseInt(limit as string)} \n                offset={parseInt(offset as string)} \n                total={todos.total}\n                onChange={({offset}: any) => {\n                    pushState({\n                        offset,\n                    })\n                }} \n            />\n        </section>\n    )\n}\n\nexport default connect(mapState, mapDispatch)(TodoList)","import TodoList from './components/TodoList'\n\nexport default TodoList","import * as React from 'react'\nimport {Route} from 'react-router-dom'\nimport TodoList from '../views/todos'\nimport woodPattern from './styles/wood-pattern.jpg'\n\n\nexport default () => (\n    <Route exact path=\"/\">\n        <div style={{ \n                display: 'flex', \n                justifyContent: 'center', \n                padding: '12px', \n                backgroundImage: `url(${woodPattern})`,\n                minHeight: 'calc(100vh - 24px)'\n            }}>\n            <TodoList />\n        </div>\n    </Route>\n)","import * as React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport {history} from './store'\nimport Home from './routes/home'\nimport store from './store'\nimport './styles/index.scss'\n\nconst App = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Home />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>\n);\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}